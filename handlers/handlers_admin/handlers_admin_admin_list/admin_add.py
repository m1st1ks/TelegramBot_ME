from os import remove
from mysql.connector import connect, Error
from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

from create import bot
from config import host, user, password, db_name, creator_id, admin_id


class AdminAddFSM(StatesGroup):
    join_id = State()
    join_username = State()
    join_role = State()


async def add_to_db(admin_id, admin_username, role, msg: types.Message):
    try:
        with connect(
                host=host,
                user=user,
                password=password,
                database=db_name
        ) as connection:
            insert_table_query = f"""
            INSERT INTO admins VALUES(NULL, {admin_id}, '{admin_username}', '{role}');
            """
            with connection.cursor() as cursor:
                cursor.execute(insert_table_query)
                connection.commit()
        markup = types.InlineKeyboardMarkup(row_width=1)
        button1 = types.InlineKeyboardButton('üë®‚Äçüíª –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤', callback_data="admin-admin_list")
        button2 = types.InlineKeyboardButton('üóÇ –ö–æ–Ω—Ç–µ–Ω—Ç', callback_data="admin-content")
        markup.add(button1, button2)
        await bot.send_message(msg.from_user.id, f'{role} {admin_username} –¥–æ–±–∞–≤–ª–µ–Ω!', reply_markup=markup)
    except Error as e:
        print(e)
        await bot.send_message(msg.from_user.id, '–£–ø—Å! –ü—Ä–æ–∏–∑–æ—à–µ–ª –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Å–µ—Ä–≤–µ—Ä—É... üôä \n'
                                                 'C–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!')


async def add(cb: types.CallbackQuery):
    await AdminAddFSM.join_id.set()
    await cb.answer()
    await cb.message.edit_text('–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –ø—Ä–æ—Ñ–∏–ª–µ):')


async def join_id(msg: types.Message):
    await AdminAddFSM.next()
    text = msg.text
    if text == str(creator_id) or text == str(admin_id):
        text = '000000000'
    with open(f'cache/{msg.from_user.id}_add.txt', 'a', encoding='utf-8') as f:
        f.write(f'{text}\n')
    await bot.send_message(msg.from_user.id, '–í–≤–µ–¥–∏—Ç–µ username –∞–¥–º–∏–Ω–∞.\n'
                                             '–ü—Ä–∏–º–µ—Ä: @nickname')


async def join_username(msg: types.Message):
    await AdminAddFSM.next()
    text = msg.text
    with open(f'cache/{msg.from_user.id}_add.txt', 'a', encoding='utf-8') as f:
        f.write(f'{text}\n')
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    button1 = types.KeyboardButton('Moderator')
    button2 = types.KeyboardButton('Admin')
    markup.add(button1, button2)
    await bot.send_message(msg.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \n\n'
                                             '<b>Moderator</b> - –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä. –ú–æ–∂–µ—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.\n\n'
                                             '<b>Admin</b> - –ê–¥–º–∏–Ω. –ú–æ–∂–µ—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∏–∑–º–µ–Ω—è—Ç—å —Å–ø–∏—Å–æ–∫ '
                                             '–∞–¥–º–∏–Ω–æ–≤.\n\n'
                                             '<b>Creator</b> - –°–æ–∑–¥–∞—Ç–µ–ª—å. –ò–º–µ–µ—Ç –ø–æ–ª–Ω—É—é –≤–ª–∞—Å—Ç—å –Ω–∞–¥ –±–æ—Ç–æ–º –∏ –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥).',
                           parse_mode='html',
                           reply_markup=markup)


async def join_role(msg: types.Message, state: FSMContext):
    await state.finish()
    text = msg.text
    with open(f'cache/{msg.from_user.id}_add.txt', 'a', encoding='utf-8') as f:
        f.write(f'{text}\n')
    with open(f'cache/{msg.from_user.id}_add.txt', 'r') as f:
        data = []
        for line in f:
            data.append(line[:-1])
    remove(f'cache/{msg.from_user.id}_add.txt')
    markup = types.ReplyKeyboardRemove()
    await bot.send_message(msg.from_user.id, '–ì–æ—Ç–æ–≤–æ! ‚úÖ', reply_markup=markup)
    await add_to_db(int(data[0]), data[1], data[2], msg)


def reg_admin_add(dp: Dispatcher):
    dp.register_callback_query_handler(add, text='admin-admin_list-change_list-add')

    dp.register_message_handler(join_id, state=AdminAddFSM.join_id)
    dp.register_message_handler(join_username, state=AdminAddFSM.join_username)
    dp.register_message_handler(join_role, state=AdminAddFSM.join_role)
